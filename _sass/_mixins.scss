
	// REM unit with fallback to pixels
	// use as @include rem(property, value);
	// e.g. @include rem(margin, 2, 4);
	//		results to
	// 		margin: 20px 40px;
	// 		margin: 2rem 4rem;
	
	@function strip-unit($num) {
		@return $num / ($num * 0 + 1);
	}

	@mixin rem($property, $values...) {
		$max: length($values);
		$pxValues: '';
		$remValues: '';

		@for $i from 1 through $max {
			$value: strip-unit(nth($values, $i));
			$pxValues: #{$pxValues + $value*10}px;

			@if $i < $max {
				$pxValues: #{$pxValues + " "};
			}
		} 

		@for $i from 1 through $max {
			$value: strip-unit(nth($values, $i));
			$remValues: #{$remValues + $value}rem;

			@if $i < $max {
				$remValues: #{$remValues + " "};
			}
		}

		#{$property}: $pxValues; 
		#{$property}: $remValues;
	}
	
	@mixin font($size: 1.4, $line: $size * 1.5) {
		font-size:   ($size * 10) + px;
		line-height: ($line * 10) + px;
		font-size:   $size + rem;
		line-height: $line + rem;
	}
	